{
	"info": {
		"_postman_id": "90d4c19a-ceee-41a9-b73e-790398adc900",
		"name": "Members",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23021778"
	},
	"item": [
		{
			"name": "Add a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.collectionVariables.set(\"member_id\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Member One\",\r\n   \"email\": \"test@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Add a member",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Member One\",\r\n   \"email\": \"test@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"70g5ab90-1276-11ed-861d-0242ac120002\",\r\n    \"name\": \"Member One\",\r\n    \"email\": \"test@test.com\",\r\n    \"birthDate\": \"1992-06-22\"\r\n}"
				}
			]
		},
		{
			"name": "Add an invalid member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"   pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message[0]).to.eql(\"name should not be empty\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"\",\r\n   \"email\": \"test@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid member",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"\",\r\n   \"email\": \"test@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"statusCode\": 400,\r\n    \"message\": \"The member data is not valid\"\r\n}"
				}
			]
		},
		{
			"name": "Get all members",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of members > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members"
					]
				}
			},
			"response": [
				{
					"name": "Get all members",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\r\n   {\r\n        \"id\": \"70g5ab90-1276-11ed-861d-0242ac120002\",\r\n        \"name\": \"Member One\",\r\n        \"email\": \"test@test.com\",\r\n        \"birthDate\": \"1992-06-22\"\r\n    },\r\n    {\r\n        \"id\": \"78a9ab90-1276-11ed-861d-0242ac120002\",\r\n        \"name\": \"Member Two\",\r\n        \"email\": \"test2@test.com\",\r\n        \"birthDate\": \"1992-06-22\"\r\n    }\r\n]"
				}
			]
		},
		{
			"name": "Get one member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{member_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{member_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one member",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{member_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"id\": \"70g5ab90-1276-11ed-861d-0242ac120002\",\r\n    \"name\": \"Member One\",\r\n    \"email\": \"test@test.com\",\r\n    \"birthDate\": \"1992-06-22\"\r\n}"
				}
			]
		},
		{
			"name": "Get an invalid member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{default_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{default_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Get an invalid member",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{default_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{default_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The member with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Update a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Member One (new)\",\r\n   \"email\": \"testnew@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/members/{{member_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{member_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update a member",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Member One (new)\",\r\n   \"email\": \"testnew@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/members/{{member_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"48a9ab90-1276-11ed-861d-0242ac120002\",\n    \"name\": \"Member One (new)\",\n    \"email\": \"testnew@test.com\",\n    \"birthDate\": \"1992-06-22\"\n}"
				}
			]
		},
		{
			"name": "Update an invalid member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n   \"name\": \"Member One (new)\",\r\n   \"email\": \"testnew@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/members/{{default_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{default_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Update an invalid member",
					"originalRequest": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"name\": \"Member One (new)\",\r\n   \"email\": \"testnew@test.com\",\r\n   \"birthDate\": \"1992-06-22\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/clubs/{{default_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"clubs",
								"{{default_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The member with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete a member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{member_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{member_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete a member",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{member_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete an invalid member",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The member with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/members/{{default_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"members",
						"{{default_id}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete an invalid member",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/members/{{member_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"members",
								"{{member_id}}"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The member with the given id was not found\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		},
		{
			"key": "member_id",
			"value": "70g5ab90-1276-11ed-861d-0242ac120002",
			"type": "string"
		},
		{
			"key": "default_id",
			"value": "FFFFFFFF-FFFF-FFFF-FFFF-FFFFFFFFFFFF",
			"type": "string"
		}
	]
}